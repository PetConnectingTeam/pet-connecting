name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarcloud-analysis:
    runs-on: ubuntu-latest

    services:
      # Use the docker-compose.yml configuration
      docker:
        image: docker:20.10.8
        options: --privileged

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js (required for React analysis)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Step 3: Set up Python (required for Flask API analysis)
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      # Step 4: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 5: Build and start containers using Docker Compose
      - name: Build and start Docker containers
        run: docker-compose up -d --build

      # Step 6: Wait for MySQL service to be ready
      - name: Wait for MySQL service
        run: |
          until docker-compose exec mysql_db mysqladmin ping -h "127.0.0.1" --silent; do
            echo "Waiting for MySQL..."
            sleep 3
          done

      # Step 7: Run backend tests for Flask API
      - name: Run backend tests
        run: |
          docker-compose exec flask_api sh -c "
            pip install -r requirements.txt &&
            pytest --maxfail=1 --disable-warnings
          "

      # Step 8: Run frontend tests for React
      - name: Run frontend tests
        run: |
          docker-compose exec frontend sh -c "
            npm install &&
            npm test -- --watchAll=false
          "

      # Step 9: SonarCloud Scan
      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
        run: |
          # Install SonarScanner for CLI
          npm install -g sonarqube-scanner
          
          # Run SonarScanner with the required parameters
          sonar-scanner \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.python.version=3.9 \
            -Dsonar.sources=api,frontend \
            -Dsonar.tests=api,frontend \
            -Dsonar.language=js,py \
            -Dsonar.exclusions=**/__tests__/** \
            -Dsonar.javascript.lcov.reportPaths=frontend/coverage/lcov.info \
            -Dsonar.python.coverage.reportPaths=api/coverage.xml
          
      # Step 10: Shut down containers
      - name: Shut down Docker containers
        run: docker-compose down
