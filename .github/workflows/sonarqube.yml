name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarcloud-analysis:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -Po '"tag_name": "\K.*?(?=")')/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Verify installation

      # Step 3: Set up Node.js (required for React analysis)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Step 4: Set up Python (required for Flask API analysis)
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      # Step 5: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 6: Build and start containers using Docker Compose
      - name: Build and start Docker containers
        run: docker-compose up -d --build

      # Step 7: Wait for MySQL service to be ready
      - name: Wait for MySQL service
        run: |
          until docker-compose exec mysql_db mysqladmin ping -h "127.0.0.1" --silent; do
            echo "Waiting for MySQL..."
            sleep 3
          done

      # Step 8: Run backend tests for Flask API
      # - name: Run backend tests
      #   run: |
      #     docker-compose exec flask_api sh -c "
      #       pip install -r requirements.txt &&
      #       pytest --maxfail=1 --disable-warnings
      #     "

      # Step 9: Run frontend tests for React
      # - name: Run frontend tests
      #   run: |
      #     docker-compose exec frontend sh -c "
      #       npm install &&
      #       npm test -- --watchAll=false
      #     "

      # Step 10: SonarCloud Scan
      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
        run: |
          # Install SonarScanner for CLI
          npm install -g sonarqube-scanner
          
          # Run SonarScanner with the required parameters
          sonar-scanner \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.python.version=3.9 \
            -Dsonar.sources=api,frontend \
            -Dsonar.language=js,py \
            -Dsonar.exclusions=**/__tests__/**,**/requirements.txt \
            -Dsonar.javascript.lcov.reportPaths=frontend/coverage/lcov.info \
            -Dsonar.python.coverage.reportPaths=api/coverage.xml
          
      # Step 11: Shut down containers
      - name: Shut down Docker containers
        run: docker-compose down
