services:
  mysql_db:
    image: mysql:latest
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: mydb
      MYSQL_USER: user
      MYSQL_PASSWORD: user_password
    ports:
      - "3306:3306"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      #- ./db/mysql_data:/var/lib/mysql    descometar quan estigui creada a DDBB
    networks:
      - webnet

  flask_api:
    build: ./api
    container_name: flask_api
    environment:
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - SQLALCHEMY_DATABASE_URI=mysql+pymysql://user:${user_password}@mysql_db/mydb
      - FLASK_ENV=development
      - FLASK_DEBUG=1
    ports:
      - "5001:5000"
    volumes:
      - ./api:/app
    depends_on:
      - mysql_db
    networks:
      - webnet

  frontend:
    build: ./frontend
    container_name: next_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonarqube
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    depends_on:
      - db
    networks:
      - webnet
  
  db:
    image: postgres:latest
    container_name: sonarqube_db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonarqube
    ports:
      - "5432:5432"

networks:
  webnet: